{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport * as actionType from \"../reducer/reducer\";\nexport function* initilizeHandlerSaga() {\n  window.localStorage.clear();\n  const scoreKeeper = {\n    game: 5,\n    score1: 0,\n    score2: 0\n  };\n  yield localStorage.setItem(\"scoreKeeper\", JSON.stringify(scoreKeeper));\n}\nexport function* gameHandlerSaga(action) {\n  const localValue = JSON.parse(localStorage.getItem(\"scoreKeeper\"));\n  const updateValue = { ...localValue\n  };\n  updateValue.score1 = 0;\n  updateValue.score2 = 0;\n  updateValue.game = action.game;\n  yield localStorage.setItem(\"scoreKeeper\", JSON.stringify(updateValue));\n  yield put(actionType.gameHandlerFinal(updateValue.game, updateValue.score1, updateValue.score2));\n}\nexport function* scoreHandlerSaga(action) {\n  const localValue = JSON.parse(localStorage.getItem(\"scoreKeeper\"));\n  const updateValue = { ...localValue\n  };\n\n  if (action.score === \"score1\") {\n    updateValue.score1 = localValue.score1 + 1;\n  } else {\n    updateValue.score2 = localValue.score2 + 1;\n  }\n\n  yield localStorage.setItem(\"scoreKeeper\", JSON.stringify(updateValue));\n  yield put(actionType.scoreHandlerFinal(updateValue.score1, updateValue.score2));\n}\nexport function* resetHandlerSaga() {\n  const localValue = JSON.parse(localStorage.getItem(\"scoreKeeper\"));\n  const updateValue = { ...localValue\n  };\n  updateValue.score1 = 0;\n  updateValue.score2 = 0;\n  updateValue.game = 5;\n  yield localStorage.setItem(\"scoreKeeper\", JSON.stringify(updateValue));\n  yield put(actionType.resetHandlerFinal(updateValue));\n}","map":{"version":3,"sources":["C:/HTML CSS Working/react_exsercise/scorekeeper_hooks/src/store/saga/Sagas.js"],"names":["put","actionType","initilizeHandlerSaga","window","localStorage","clear","scoreKeeper","game","score1","score2","setItem","JSON","stringify","gameHandlerSaga","action","localValue","parse","getItem","updateValue","gameHandlerFinal","scoreHandlerSaga","score","scoreHandlerFinal","resetHandlerSaga","resetHandlerFinal"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAO,KAAKC,UAAZ,MAA4B,oBAA5B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpCC,EAAAA,MAAM,CAACC,YAAP,CAAoBC,KAApB;AACA,QAAMC,WAAW,GAAG;AAChBC,IAAAA,IAAI,EAAE,CADU;AAEhBC,IAAAA,MAAM,EAAE,CAFQ;AAGhBC,IAAAA,MAAM,EAAE;AAHQ,GAApB;AAKA,QAAML,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAApC,CAAN;AACH;AAED,OAAO,UAAUO,eAAV,CAA0BC,MAA1B,EAAkC;AACrC,QAAMC,UAAU,GAAGJ,IAAI,CAACK,KAAL,CAAWZ,YAAY,CAACa,OAAb,CAAqB,aAArB,CAAX,CAAnB;AACA,QAAMC,WAAW,GAAG,EAAE,GAAGH;AAAL,GAApB;AACAG,EAAAA,WAAW,CAACV,MAAZ,GAAqB,CAArB;AACAU,EAAAA,WAAW,CAACT,MAAZ,GAAqB,CAArB;AACAS,EAAAA,WAAW,CAACX,IAAZ,GAAmBO,MAAM,CAACP,IAA1B;AACA,QAAMH,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeM,WAAf,CAApC,CAAN;AACA,QAAMlB,GAAG,CAACC,UAAU,CAACkB,gBAAX,CAA4BD,WAAW,CAACX,IAAxC,EAA8CW,WAAW,CAACV,MAA1D,EAAkEU,WAAW,CAACT,MAA9E,CAAD,CAAT;AACH;AAED,OAAO,UAAUW,gBAAV,CAA2BN,MAA3B,EAAmC;AACtC,QAAMC,UAAU,GAAGJ,IAAI,CAACK,KAAL,CAAWZ,YAAY,CAACa,OAAb,CAAqB,aAArB,CAAX,CAAnB;AACA,QAAMC,WAAW,GAAG,EAAE,GAAGH;AAAL,GAApB;;AACA,MAAID,MAAM,CAACO,KAAP,KAAiB,QAArB,EAA+B;AAC3BH,IAAAA,WAAW,CAACV,MAAZ,GAAqBO,UAAU,CAACP,MAAX,GAAoB,CAAzC;AACH,GAFD,MAGK;AACDU,IAAAA,WAAW,CAACT,MAAZ,GAAqBM,UAAU,CAACN,MAAX,GAAoB,CAAzC;AACH;;AACD,QAAML,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeM,WAAf,CAApC,CAAN;AACA,QAAMlB,GAAG,CAACC,UAAU,CAACqB,iBAAX,CAA6BJ,WAAW,CAACV,MAAzC,EAAiDU,WAAW,CAACT,MAA7D,CAAD,CAAT;AACH;AAED,OAAO,UAAUc,gBAAV,GAA6B;AAChC,QAAMR,UAAU,GAAGJ,IAAI,CAACK,KAAL,CAAWZ,YAAY,CAACa,OAAb,CAAqB,aAArB,CAAX,CAAnB;AACA,QAAMC,WAAW,GAAG,EAAE,GAAGH;AAAL,GAApB;AACAG,EAAAA,WAAW,CAACV,MAAZ,GAAqB,CAArB;AACAU,EAAAA,WAAW,CAACT,MAAZ,GAAqB,CAArB;AACAS,EAAAA,WAAW,CAACX,IAAZ,GAAmB,CAAnB;AACA,QAAMH,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeM,WAAf,CAApC,CAAN;AACA,QAAMlB,GAAG,CAACC,UAAU,CAACuB,iBAAX,CAA6BN,WAA7B,CAAD,CAAT;AACH","sourcesContent":["import { put } from \"redux-saga/effects\";\r\nimport * as actionType from \"../reducer/reducer\";\r\n\r\nexport function* initilizeHandlerSaga() {\r\n    window.localStorage.clear();\r\n    const scoreKeeper = {\r\n        game: 5,\r\n        score1: 0,\r\n        score2: 0\r\n    }\r\n    yield localStorage.setItem(\"scoreKeeper\", JSON.stringify(scoreKeeper));\r\n}\r\n\r\nexport function* gameHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"scoreKeeper\"));\r\n    const updateValue = { ...localValue };\r\n    updateValue.score1 = 0;\r\n    updateValue.score2 = 0;\r\n    updateValue.game = action.game;\r\n    yield localStorage.setItem(\"scoreKeeper\", JSON.stringify(updateValue));\r\n    yield put(actionType.gameHandlerFinal(updateValue.game, updateValue.score1, updateValue.score2));\r\n}\r\n\r\nexport function* scoreHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"scoreKeeper\"));\r\n    const updateValue = { ...localValue };\r\n    if (action.score === \"score1\") {\r\n        updateValue.score1 = localValue.score1 + 1;\r\n    }\r\n    else {\r\n        updateValue.score2 = localValue.score2 + 1;\r\n    }\r\n    yield localStorage.setItem(\"scoreKeeper\", JSON.stringify(updateValue));\r\n    yield put(actionType.scoreHandlerFinal(updateValue.score1, updateValue.score2));\r\n}\r\n\r\nexport function* resetHandlerSaga() {\r\n    const localValue = JSON.parse(localStorage.getItem(\"scoreKeeper\"));\r\n    const updateValue = { ...localValue };\r\n    updateValue.score1 = 0;\r\n    updateValue.score2 = 0;\r\n    updateValue.game = 5;\r\n    yield localStorage.setItem(\"scoreKeeper\", JSON.stringify(updateValue));\r\n    yield put(actionType.resetHandlerFinal(updateValue));\r\n}"]},"metadata":{},"sourceType":"module"}